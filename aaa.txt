一、
(1) error
(2) [-3, -1]
(3) error
(4) [1, 2]
(5) float num = random(-1, 1);
    float ret;
    if (num > 0) ret = 1.5;
    else if (num < 0) ret = -1.5;
    else ret = 0;
(6) random(3, 4) - random()
(7) int num = random(1, 4);
    ret = num * num;

二、
1.
#include <bits/stdc++.h>
#include <fcntl.h>
#include <unistd.h>
using namespace std;

class Solution {
public:
		int hash[128] = {0};
    void func(string text) {
			for (auto c : text) {
				hash[c]++;
			}
		}

		pair<char, int> result() {
			int max = 0;
			int index = 0;
			for (int i = 0; i < 128; ++i) {
				if (hash[i] > max) {
					max = hash[i];
					index = i;
			}
		}
		return {index, max};
	}
};

int main(int argc, char** argv) {
	int fd = ::open(argv[1], O_RDONLY | O_CLOEXEC);
	char buf[1024];
	memset(buf, 0, 1024);
	Solution s;
	while (::read(fd, buf, 1024) > 0) {
		s.func(buf);
	}
	auto ret = s.result();
	cout << ret.first << " " << ret.second << endl;
	return 0;
}

2.
#include <bits/stdc++.h>

using namespace std;

class Solution {
public:
		vector<vector<int>> ret;
    vector<vector<int>> func(int num) {
			if (num < 3) return ret;
			int left = 0;
			int right = 0;
			for (int i = 1; i <= num / 3; ++i) {
				left = i;
				right = num - 2 * left;
				while (right >= left) {
					vector<int> tmp({i, left, right});
					ret.push_back(tmp);
					right--;
					left++;
				}
			}
			return ret;
		}
};

int main(int argc, char** argv) {
	Solution s;
	int num = atoi(argv[1]);
	auto ret = s.func(num);
	for (auto& n : ret) {
		for (auto m : n) {
			cout << m << " ";
		}
		cout << endl;
	}
}

